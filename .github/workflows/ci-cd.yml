name: CI/CD Pipeline


on:
  push:
    branches:
      - dev        # CI runs here
      - main       # Deploy runs here
  pull_request:
    branches:
      - main       # Validate PRs into main

jobs:
  # -------------------------
  # CI: Build & Test Backend
  # -------------------------
  backend-ci:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies (Order Service)
        working-directory: backend/order_service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run tests (Order Service)
        working-directory: backend/order_service
        run: pytest -v

      - name: Install dependencies (Product Service)
        working-directory: backend/product_service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run tests (Product Service)
        working-directory: backend/product_service
        run: pytest -v

  # -------------------------
  # CI: Build Frontend
  # -------------------------
  frontend-ci:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3

      - name: Validate Nginx config
        working-directory: frontend
        run: nginx -t -c $PWD/nginx.conf

  # -------------------------
  # CD: Deploy to AKS
  # -------------------------
  deploy:
    runs-on: ubuntu-latest
    needs: [backend-ci, frontend-ci]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build & Push Order Service
        run: |
          az acr build --registry arpitcreditacr --image order_service:latest ./backend/order_service

      - name: Build & Push Product Service
        run: |
          az acr build --registry arpitcreditacr --image product_service:latest ./backend/product_service

      - name: Build & Push Frontend
        run: |
          az acr build --registry arpitcreditacr --image frontend:latest ./frontend

      - name: Get AKS Credentials
        run: |
          az aks get-credentials --resource-group Arpit_Credit-rg --name arpitcreditaks --overwrite-existing

      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s/
          kubectl rollout status deployment/frontend
          kubectl rollout status deployment/order-service-w08e1
          kubectl rollout status deployment/product-service-w08e1
